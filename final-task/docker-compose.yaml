version: '3.3'
services:
    postgres:
        container_name: final-postgress
        image: postgres
        volumes:
            - pgdata:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        networks: 
            - finalTask
        restart: always
    sonarqube:
        container_name: final-sonarqube
        image: sonarqube:5.6
        volumes:
            - data:/opt/sonarqube/data
            - extensions:/opt/sonarqube/extensions
            - logs:/opt/sonarqube/logs
        environment:
            - SONARQUBE_JDBC_USERNAME=${SONARQUBE_JDBC_USERNAME}
            - SONARQUBE_JDBS_PASSWORD=${SONARQUBE_JDBS_PASSWORD}
        ports:
            - "9000:9000"
        networks:
            - finalTask
        restart: always
    jenkins:
        container_name: final-jenkins
        image: jenkins/jenkins
        volumes:
            - jenkins:/var/lib/jenkins
        ports:
            - "8080:8080"
        networks:
            - finalTask
        restart: always
    nexus:
        container_name: final-nexus
        image: sonatype/nexus3
        restart: always
        ports:
           - "8081:8081"
        networks:
           - nexus
        volumes:
           - /some/dir/nexus-data:/nexus-data 
    portainer:
        container_name: final-portainer
        image: portainer/portainer-ce
        ports:
            - "8800:8000"
            - "9900:9000"
        volumes:
            - docker_sock:/var/run/docker.sock
            - portainer_data:/data
        restart: always
        networks: 
            - finalTask
volumes:
    pgdata:
    data:
    extensions:
    logs:
    jenkins:
    nexus-data:
    portainer_data:
    docker_sock:

networks:
    finalTask:
    nexus:
